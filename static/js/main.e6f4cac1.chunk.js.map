{"version":3,"sources":["components/user/PrivateRoute.js","firebase/firebase.js","redux/slices/auth.js","components/user/Login.js","components/Home.js","components/user/Profile.js","components/MenuHeader.js","router/CustomerRouter.js","components/admin/Sidebar.jsx","components/admin/UploadForm.jsx","components/admin/Dashboard.jsx","router/AdminRouter.js","App.js","reportWebVitals.js","redux/store/index.js","index.js"],"names":["PrivateRoute","RouteComponent","component","rest","user","useSelector","state","auth","render","routeProps","to","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","googleProvider","GoogleAuthProvider","facebookProvider","FacebookAuthProvider","firebaseAuth","firestore","initialCustomer","localStorage","getItem","userSlice","createSlice","name","initialState","customer","admin","reducers","CURRENT_CUSTOMER","action","payload","CURRENT_ADMIN","LOGOUT_CUSTOMER_SUCCESS","LOGOUT_ADMIN_SUCCESS","actions","currentCustomer","dispatch","a","setCustomer","currentUser","providerData","setItem","message","Login","useDispatch","history","useHistory","useEffect","push","pathname","handleGoogleAuth","signInWithPopup","handleFacebookAuth","result","credential","idToken","Form","Input","fluid","type","placeholder","id","Button","onClick","Home","Profile","Card","Content","Header","MenuHeader","Menu","Item","position","signOut","removeItem","CustomerRouter","Fragment","exact","path","Sidebar","useState","setActiveItem","handleClick","e","targe","secondary","vertical","UploadForm","Segment","Group","label","required","width","min","Select","options","key","text","value","Dashboard","Container","style","marginLeft","Grid","Column","stretched","AdminRouter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","store","configureStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6f4cac1.chunk.js","sourcesContent":["import { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) =>{ \r\n    const { user } = useSelector(state  => state.auth)\r\n\r\n    return(\r\n        <Route\r\n        { ...rest }\r\n        render={routeProps =>\r\n        user !== null \r\n        ? \r\n        ( <RouteComponent { ...routeProps } /> )\r\n        :\r\n        (<Redirect to={'/Login'}/>)\r\n        }\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default PrivateRoute","import firebase from 'firebase'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain:  process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL:  process.env.REACT_APP_DATABASE_URL,\r\n    projectId:  process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket:  process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId:  process.env.REACT_APP_MESSAGE_ID,\r\n    appId:  process.env.REACT_APP_APP_ID,\r\n    measurementId:  process.env.REACT_APP_MEASUREMENT_ID\r\n  }\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider()\r\nconst facebookProvider = new firebase.auth.FacebookAuthProvider()\r\nconst firebaseAuth = firebase.auth()\r\nconst firebaseFirestore = firebase.firestore()\r\n\r\nexport { firebaseAuth, firebaseFirestore, googleProvider, facebookProvider } ","import { createSlice } from '@reduxjs/toolkit'\r\nimport { firebaseAuth  } from '../../firebase/firebase'\r\n\r\n\r\nconst initialCustomer = localStorage.getItem('customerData')\r\n                    ? localStorage.getItem('customerData')\r\n                    : null\r\n\r\nconst initalAdmin = null                    \r\nconst userSlice = createSlice({\r\n    name: 'auth',\r\n    initialState : {\r\n        customer: initialCustomer,\r\n        admin: initalAdmin\r\n    },\r\n\r\n    reducers:{\r\n        CURRENT_CUSTOMER: (state, action) => {\r\n            state.customer = action.payload\r\n        },\r\n        CURRENT_ADMIN: (state, action) => {\r\n            state.admin = action.payload\r\n        },\r\n        LOGOUT_CUSTOMER_SUCCESS: (state, action) => {\r\n            state.customer = null\r\n        },\r\n        LOGOUT_ADMIN_SUCCESS: (state, action) => {\r\n            state.admin = null\r\n        },\r\n    }\r\n\r\n})\r\n\r\nexport default userSlice.reducer\r\n\r\nconst { CURRENT_CUSTOMER, CURRENT_ADMIN, LOGOUT_CUSTOMER_SUCCESS, LOGOUT_ADMIN_SUCCESS } = userSlice.actions\r\n\r\nexport const currentCustomer = () => async dispatch =>{\r\n    try {\r\n        const setCustomer = firebaseAuth.currentUser.providerData[0]\r\n        localStorage.setItem('customerData', setCustomer)\r\n        dispatch(CURRENT_CUSTOMER(setCustomer))\r\n    } catch (error) {\r\n        return error.message\r\n    }\r\n}\r\n\r\nexport const currentAdmin = () => async dispatch =>{\r\n    try {\r\n        const setAdmin = firebaseAuth.currentUser.providerData[0]\r\n        dispatch(CURRENT_ADMIN(setAdmin))\r\n    } catch (error) {\r\n        return error.message\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const logoutUser = () => async dispatch =>{\r\n    try {\r\n        await firebaseAuth.signOut()\r\n        localStorage.removeItem('customerData')\r\n        dispatch(LOGOUT_CUSTOMER_SUCCESS())\r\n    } catch (error) {\r\n        return error.message\r\n    }\r\n}\r\n\r\nexport const logoutAdmin = () => async dispatch =>{\r\n    try {\r\n        await firebaseAuth.signOut()\r\n        dispatch(LOGOUT_ADMIN_SUCCESS())\r\n    } catch (error) {\r\n        return error.message\r\n    }\r\n}","import  React, { useEffect } from 'react'\r\nimport { Button, Form } from 'semantic-ui-react'\r\nimport { googleProvider, firebaseAuth, facebookProvider } from '../../firebase/firebase'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { currentCustomer } from '../../redux/slices/auth'\r\n\r\nconst Login = () => {\r\n\r\nconst dispatch = useDispatch()\r\nconst history = useHistory()\r\nconst { user } = useSelector(state => state.auth)\r\n\r\nuseEffect(() =>{\r\n   if(user){\r\n      history.push({\r\n         pathname:'/profile'\r\n      })\r\n   }\r\n},[user, history])\r\n\r\n\r\n// const handlePhoneAuth = async () =>{\r\n//    window.\r\n// }\r\n\r\nconst handleGoogleAuth = async () =>{\r\n   await firebaseAuth.signInWithPopup(googleProvider)\r\n   dispatch(currentCustomer())\r\n }\r\n\r\n const handleFacebookAuth = async () =>{\r\n   const result = await firebaseAuth.signInWithPopup(facebookProvider)\r\n   dispatch(currentCustomer(result.credential.idToken))\r\n }\r\n return(\r\n    <>\r\n     <Form >\r\n         <Form.Input \r\n            fluid\r\n            type='tel'\r\n            placeholder='Phone Number'\r\n\r\n         />\r\n         <div id=\"recaptcha-container\"></div>\r\n         <Button>Sign In</Button>\r\n     </Form>\r\n     <Button onClick={handleGoogleAuth}>Sign in via google</Button>\r\n     <Button onClick={handleFacebookAuth}>Sign in via facebook</Button>\r\n     </>\r\n )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\n// import { Button } from 'semantic-ui-react'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import { logoutUser } from '../redux/slices/auth'\r\n// import { getUsersData, findUser } from '../hooks/useFirestore' \r\n\r\nconst Home = () => {\r\n    // const dispatch = useDispatch()\r\n    // const { user } = useSelector(state => state.auth)\r\n\r\n    // findUser(\"email\", user.email)\r\n    \r\n    // const handleLogout = () =>{\r\n    //     dispatch(logoutUser())\r\n    // } \r\n\r\n    return (\r\n        <div>\r\n            <p>Welcome to greenMarket</p>\r\n            {/* <h1>welcome {user.email}</h1>\r\n            <Button onClick={handleLogout}>Logout</Button> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport { Card } from 'semantic-ui-react'\r\n// import { useSelector } from 'react-redux'\r\n\r\nconst Profile = () => {\r\n    // const { user } = useSelector(state => state.auth)\r\n    return (\r\n        <Card>\r\n            <Card.Content>\r\n                <Card.Header>User</Card.Header>\r\n            </Card.Content>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Menu } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { logoutUser } from '../redux/slices/auth'\r\n\r\nconst MenuHeader = () => {\r\n    const { user } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n  \r\n    const handleLogout = () =>{\r\n        dispatch(logoutUser())\r\n    } \r\n    return (\r\n        <Menu>\r\n        <Menu.Item\r\n         name='home'            \r\n        />\r\n        <Menu.Menu position='right'> \r\n            { user ? \r\n                <Menu.Item onClick={ handleLogout }>Logout</Menu.Item>\r\n                : <Link to='/login'><Menu.Item>Login</Menu.Item></Link>\r\n            }\r\n            </Menu.Menu>\r\n        </Menu>\r\n    );\r\n}\r\n\r\nexport default MenuHeader","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport PrivateRoute from '../components/user/PrivateRoute'\r\nimport Login from '../components/user/Login'\r\nimport Home from '../components/Home'\r\nimport Profile from '../components/user/Profile'\r\nimport MenuHeader from '../components/MenuHeader'\r\n\r\nconst CustomerRouter = () =>{\r\n    return(\r\n    <React.Fragment>\r\n        <MenuHeader />\r\n        <PrivateRoute exact path='/' component={ Home }/>\r\n        <PrivateRoute exact path='/profile' component={ Profile }/>\r\n        <Route exact path='/login' component={ Login }/>\r\n    </React.Fragment>\r\n    )\r\n    \r\n}\r\n\r\nexport default CustomerRouter","import React, { useState } from 'react';\r\nimport { Menu } from 'semantic-ui-react'\r\n \r\nconst Sidebar = () => {\r\n    const [ activeItem, setActiveItem ] = useState(null)\r\n\r\n    const handleClick = (e) =>{\r\n        setActiveItem(e.targe.name)\r\n    }\r\n    \r\n    return (\r\n        <Menu secondary vertical>\r\n        <Menu.Item\r\n         name='account'\r\n        //  active={ setActiveItem('account')}\r\n         onClick={handleClick}\r\n        >\r\n        </Menu.Item>\r\n        <Menu.Item\r\n         name='items'\r\n        //  active={ setActiveItem('account')}\r\n         onClick={handleClick}   \r\n        >\r\n            \r\n        </Menu.Item>\r\n    </Menu>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React, { useState } from 'react'\r\nimport { Segment, Form, Button } from 'semantic-ui-react'\r\n\r\nconst UploadForm = () =>{\r\n    const category = [\r\n        { key:1, text:'Vegetable', value:'Vegetable' },\r\n        { key:2, text:'Fruit', value:'Fruit' }\r\n    ]\r\n    // const { admin } = useSelector(state => state.auth)\r\n        return(\r\n            <React.Fragment>\r\n                        <Segment>\r\n                            <Form>\r\n                                <Form.Group>\r\n                                    <Form.Input \r\n                                        label='Product Name'\r\n                                        required\r\n                                        placeholder='Product Name'\r\n                                        width={4}\r\n                                    />\r\n                                    <Form.Input \r\n                                        label='Price'\r\n                                        required\r\n                                        type='number'\r\n                                        placeholder='₹'\r\n                                        min={0}\r\n                                        width={4}\r\n                                    />\r\n                                    <Form.Select \r\n                                    required\r\n                                    label='Category'\r\n                                    options={category}\r\n                                    placeholder='Select a category'\r\n                                    />\r\n                                    <Button \r\n                                    type='submit'\r\n                                    placeholder='Upload'\r\n                                    />\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Segment>\r\n                 \r\n              \r\n                \r\n            </React.Fragment>   \r\n           \r\n        )\r\n}\r\n\r\nexport default UploadForm","import React, { useState } from 'react'\r\nimport Sidebar from './Sidebar'\r\nimport UploadForm from './UploadForm'\r\nimport { Grid, Container } from 'semantic-ui-react'\r\n\r\nconst Dashboard = () =>{\r\n        return(\r\n            <Container style={{ marginLeft: 20 }}>\r\n                <Grid>\r\n                     <Grid.Column width={2}>\r\n                        <Sidebar />\r\n                     </Grid.Column>\r\n                    <Grid.Column stretched width={12}>\r\n                        <UploadForm />  \r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Container>   \r\n           \r\n        )\r\n}\r\n\r\nexport default Dashboard","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport Dashboard from '../components/admin/Dashboard'\r\nconst AdminRouter = () =>{\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Route exact path='/dashboard' component={ Dashboard }/>\r\n        \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminRouter","import 'semantic-ui-css/semantic.min.css'\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport CustomerRouter from './router/CustomerRouter'\nimport AdminRouter from './router/AdminRouter'\n\nfunction App() {\n  return (\n      <Router>\n        <CustomerRouter />\n        <AdminRouter />\n      </Router>\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { combineReducers } from 'redux'\r\nimport auth from '../slices/auth'\r\n\r\nconst reducer = combineReducers({\r\n    auth,\r\n    \r\n  })\r\nconst store = configureStore({\r\n    reducer,\r\n  })\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store= { store }>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}